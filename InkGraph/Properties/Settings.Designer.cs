//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace InkGraph.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "16.10.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool HighlightInEdges {
            get {
                return ((bool)(this["HighlightInEdges"]));
            }
            set {
                this["HighlightInEdges"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool HighlightOutEdges {
            get {
                return ((bool)(this["HighlightOutEdges"]));
            }
            set {
                this["HighlightOutEdges"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("LightSlateGray")]
        public global::System.Drawing.Color DefaultEdgeColor {
            get {
                return ((global::System.Drawing.Color)(this["DefaultEdgeColor"]));
            }
            set {
                this["DefaultEdgeColor"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("1")]
        public int DefaultEdgeLineWidth {
            get {
                return ((int)(this["DefaultEdgeLineWidth"]));
            }
            set {
                this["DefaultEdgeLineWidth"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("20")]
        public int ArrowheadLength {
            get {
                return ((int)(this["ArrowheadLength"]));
            }
            set {
                this["ArrowheadLength"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("DarkSlateGray")]
        public global::System.Drawing.Color DefaultNodeColor {
            get {
                return ((global::System.Drawing.Color)(this["DefaultNodeColor"]));
            }
            set {
                this["DefaultNodeColor"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("1")]
        public int DefaultNodeLineWidth {
            get {
                return ((int)(this["DefaultNodeLineWidth"]));
            }
            set {
                this["DefaultNodeLineWidth"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Blue")]
        public global::System.Drawing.Color HighlightedInEdgeColor {
            get {
                return ((global::System.Drawing.Color)(this["HighlightedInEdgeColor"]));
            }
            set {
                this["HighlightedInEdgeColor"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Red")]
        public global::System.Drawing.Color HighlightedOutEdgeColor {
            get {
                return ((global::System.Drawing.Color)(this["HighlightedOutEdgeColor"]));
            }
            set {
                this["HighlightedOutEdgeColor"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("3")]
        public int HighlightedEdgeLineWidth {
            get {
                return ((int)(this["HighlightedEdgeLineWidth"]));
            }
            set {
                this["HighlightedEdgeLineWidth"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Blue")]
        public global::System.Drawing.Color HighlightedInNodeColor {
            get {
                return ((global::System.Drawing.Color)(this["HighlightedInNodeColor"]));
            }
            set {
                this["HighlightedInNodeColor"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Red")]
        public global::System.Drawing.Color HighlightedOutNodeColor {
            get {
                return ((global::System.Drawing.Color)(this["HighlightedOutNodeColor"]));
            }
            set {
                this["HighlightedOutNodeColor"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("3")]
        public int HighlightedNodeLineWidth {
            get {
                return ((int)(this["HighlightedNodeLineWidth"]));
            }
            set {
                this["HighlightedNodeLineWidth"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("166, 223, 157")]
        public global::System.Drawing.Color StartNodeFill {
            get {
                return ((global::System.Drawing.Color)(this["StartNodeFill"]));
            }
            set {
                this["StartNodeFill"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("122, 179, 255")]
        public global::System.Drawing.Color EndNodeFill {
            get {
                return ((global::System.Drawing.Color)(this["EndNodeFill"]));
            }
            set {
                this["EndNodeFill"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("224, 210, 227")]
        public global::System.Drawing.Color OrphanNodeFill {
            get {
                return ((global::System.Drawing.Color)(this["OrphanNodeFill"]));
            }
            set {
                this["OrphanNodeFill"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool ShowTooltips {
            get {
                return ((bool)(this["ShowTooltips"]));
            }
            set {
                this["ShowTooltips"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("30")]
        public int NodeSeparation {
            get {
                return ((int)(this["NodeSeparation"]));
            }
            set {
                this["NodeSeparation"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("15")]
        public int NodeFontSize {
            get {
                return ((int)(this["NodeFontSize"]));
            }
            set {
                this["NodeFontSize"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("15")]
        public int ToolTipFontSize {
            get {
                return ((int)(this["ToolTipFontSize"]));
            }
            set {
                this["ToolTipFontSize"] = value;
            }
        }
    }
}
